{"version":3,"file":"static/js/814.0edabc5f.chunk.js","mappings":"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","sources":["views/app-views/clients/clientList/UserView.js","components/shared-components/AvatarStatus/index.js","views/app-views/clients/clientList/index.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport {Avatar, Divider, Drawer} from 'antd';\r\nimport {MailOutlined, MobileOutlined, UserOutlined} from '@ant-design/icons';\r\n\r\nexport class UserView extends Component {\r\n\trender() {\r\n\t\tconst { data, visible, close} = this.props;\r\n\t\treturn (\r\n\t\t\t<Drawer\r\n\t\t\t\twidth={300}\r\n\t\t\t\tplacement=\"right\"\r\n\t\t\t\tonClose={close}\r\n\t\t\t\tclosable={false}\r\n\t\t\t\topen={visible}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"text-center mt-3\">\r\n\t\t\t\t\t<Avatar size={80} src={data?.img} />\r\n\t\t\t\t\t<h3 className=\"mt-2 mb-0\">{data?.name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Divider dashed />\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<h6 className=\"text-muted text-uppercase mb-3\">Account details</h6>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">id: {data?.id}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mt-5\">\r\n\t\t\t\t\t<h6 className=\"text-muted text-uppercase mb-3\">CONTACT</h6>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<MobileOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">{data?.phone}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<MailOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">{data?.email? data?.email: '-'}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Drawer>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default UserView\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, {Component} from 'react'\r\nimport {Button, Card, message, Table, Tooltip} from 'antd';\r\nimport {DeleteOutlined, EyeOutlined} from '@ant-design/icons';\r\nimport UserView from './UserView';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport {connect} from \"react-redux\";\r\nimport {fetchClients, getClients, setClient} from \"../../../../store/slices/clientsSlice\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {APP_PREFIX_PATH} from \"../../../../configs/AppConfig\";\r\nimport userData from \"../../../../assets/data/user-list.data.json\";\r\n\r\nclass UserList extends Component {\r\n\r\n    state = {\r\n        userProfileVisible: false,\r\n        selectedUser: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.getClients()\r\n        const key = 'updatable';\r\n        message.loading({content: 'Updating...', key});\r\n        setTimeout(() => {\r\n            this.props.fetchClients(userData)\r\n            message.success({content: 'Done!', key, duration: 2});\r\n        }, 1000);\r\n    }\r\n\r\n    showClient(id) {\r\n        this.props.setClient(id)\r\n\r\n    }\r\n\r\n    deleteUser = userId => {\r\n        this.setState({\r\n            users: this.state.users.filter(item => item.id !== userId),\r\n        })\r\n        message.success({content: `Deleted user ${userId}`, duration: 2});\r\n    }\r\n\r\n    showUserProfile = userInfo => {\r\n        this.setState({\r\n            userProfileVisible: true,\r\n            selectedUser: userInfo\r\n        });\r\n    };\r\n\r\n    closeUserProfile = () => {\r\n        this.setState({\r\n            userProfileVisible: false,\r\n            selectedUser: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {userProfileVisible, selectedUser} = this.state;\r\n        const tableColumns = [\r\n            {\r\n                title: 'User',\r\n                dataIndex: 'name',\r\n                render: (_, record) => (\r\n                    <NavLink onClick={() => this.showClient(record.id)}\r\n                             to={`${APP_PREFIX_PATH}/main/clients/about-client`} className=\"d-flex cursor-pointer\">\r\n                        <AvatarStatus src={record.img} name={record.name} subTitle={record.email}/>\r\n                    </NavLink>\r\n                ),\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.name.toLowerCase();\r\n                        b = b.name.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: 'Phone',\r\n                dataIndex: 'phone',\r\n                sorter: {\r\n                    compare: (a, b) => a.phone.length - b.phone.length,\r\n                },\r\n            },\r\n            {\r\n                title: 'Website',\r\n                dataIndex: 'website',\r\n                sorter: {\r\n                    compare: (a, b) => a.phone.length - b.phone.length,\r\n                },\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: 'actions',\r\n                render: (_, elm) => (\r\n                    <div className=\"text-right d-flex justify-content-end\">\r\n                        <Tooltip title=\"View\">\r\n                            <Button type=\"primary\" className=\"mr-2\" icon={<EyeOutlined/>} onClick={() => {\r\n                                this.showUserProfile(elm)\r\n                            }} size=\"small\"/>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                            <Button danger icon={<DeleteOutlined/>} onClick={() => {\r\n                                this.deleteUser(elm.id)\r\n                            }} size=\"small\"/>\r\n                        </Tooltip>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <Card bodyStyle={{'padding': '0px'}}>\r\n                <div className=\"table-responsive\">\r\n                    <Table columns={tableColumns} dataSource={this.props.clientList} rowKey='id'/>\r\n                </div>\r\n                <UserView data={selectedUser} visible={userProfileVisible} close={() => {\r\n                    this.closeUserProfile()\r\n                }}/>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({clients}) => {\r\n    const {clientList} = clients;\r\n    return {clientList}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getClients,\r\n    setClient,\r\n    fetchClients\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList)\r\n\r\n"],"names":["UserView","this","props","data","visible","close","width","placement","onClose","closable","open","className","size","src","img","name","dashed","UserOutlined","id","MobileOutlined","phone","MailOutlined","email","Component","renderAvatar","type","text","suffix","subTitle","icon","shape","gap","onNameClick","onClick","UserList","state","userProfileVisible","selectedUser","deleteUser","userId","setState","users","filter","item","message","content","duration","showUserProfile","userInfo","closeUserProfile","key","setTimeout","fetchClients","userData","setClient","tableColumns","title","dataIndex","render","_","record","showClient","to","APP_PREFIX_PATH","sorter","compare","a","b","toLowerCase","length","elm","EyeOutlined","danger","DeleteOutlined","bodyStyle","columns","dataSource","clientList","rowKey","mapDispatchToProps","getClients","connect","clients"],"sourceRoot":""}