{"version":3,"file":"static/js/329.579cad99.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","views/app-views/clients/aboutClient/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React, {Component} from 'react';\r\nimport {Avatar, Button, Col, DatePicker, Form, Input, message, Row, Upload} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport {ROW_GUTTER} from 'constants/ThemeConstant';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport {connect} from \"react-redux\";\r\nimport {APP_PREFIX_PATH} from \"../../../../configs/AppConfig\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nexport class AboutClient extends Component {\r\n\r\n    avatarEndpoint = 'https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n\r\n    state = {\r\n        dataSend: false,\r\n        client: {\r\n            avatarUrl: '/img/avatars/thumb-6.jpg',\r\n            name: 'Charlie Howard',\r\n            email: 'charlie.howard@themenate.com',\r\n            userName: 'Charlie',\r\n            dateOfBirth: null,\r\n            phoneNumber: '+44 (1532) 135 7921',\r\n            website: '',\r\n            address: '',\r\n            city: '',\r\n            postcode: ''\r\n        }\r\n    }\r\n\r\n    getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    render() {\r\n\r\n        const onFinish = values => {\r\n            const key = 'updatable';\r\n            message.loading({content: 'Updating...', key});\r\n            setTimeout(() => {\r\n                message.success({content: 'Done!', key, duration: 2});\r\n                this.setState({\r\n                    dataSend: true, client: {\r\n                        name: values.name,\r\n                        email: values.email,\r\n                        userName: values.userName,\r\n                        dateOfBirth: values.dateOfBirth,\r\n                        phoneNumber: values.phoneNumber,\r\n                        website: values.website,\r\n                        address: values.address,\r\n                        city: values.city,\r\n                        postcode: values.postcode,\r\n                    }\r\n                })\r\n            }, 1000);\r\n        };\r\n\r\n\r\n        const onFinishFailed = errorInfo => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n\r\n        const onUploadAavater = info => {\r\n            const key = 'updatable';\r\n            if (info.file.status === 'uploading') {\r\n                message.loading({content: 'Uploading...', key, duration: 1000});\r\n                return;\r\n            }\r\n            if (info.file.status === 'done') {\r\n                this.getBase64(info.file.originFileObj, imageUrl =>\r\n                    this.setState({\r\n                        avatarUrl: imageUrl,\r\n                    }),\r\n                );\r\n                message.success({content: 'Uploaded!', key, duration: 1.5});\r\n            }\r\n        };\r\n\r\n        const onRemoveAvater = () => {\r\n            this.setState({\r\n                avatarUrl: ''\r\n            })\r\n        }\r\n        if (this.state.dataSend || this.props.client === null) {\r\n            return <Navigate to={`${APP_PREFIX_PATH}/main/clients/client-list`} replace/>\r\n        }\r\n        const {name, email, username, phone, website, address, avatarUrl} = this.props.client;\r\n\r\n\r\n        return (\r\n            <>\r\n                <Flex alignItems=\"center\" mobileFlex={false} className=\"text-center text-md-left\">\r\n                    <Avatar size={90} src={avatarUrl} icon={<UserOutlined/>}/>\r\n                    <div className=\"ml-3 mt-md-0 mt-3\">\r\n                        <Upload onChange={onUploadAavater} showUploadList={false} action={this.avatarEndpoint}>\r\n                            <Button type=\"primary\">Change Avatar</Button>\r\n                        </Upload>\r\n                        <Button className=\"ml-2\" onClick={onRemoveAvater}>Remove</Button>\r\n                    </div>\r\n                </Flex>\r\n                <div className=\"mt-4\">\r\n                    <Form\r\n                        name=\"basicInformation\"\r\n                        layout=\"vertical\"\r\n                        initialValues={\r\n                            {\r\n                                'name': name,\r\n                                'email': email,\r\n                                'username': username,\r\n                                'phoneNumber': phone,\r\n                                'website': website,\r\n                                'address': address.street,\r\n                                'city': address.city,\r\n                            }\r\n                        }\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={24} lg={16}>\r\n                                <Row gutter={ROW_GUTTER}>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Please input your name!',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Username\"\r\n                                            name=\"username\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Please input your username!'\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            rules={[{\r\n                                                required: true,\r\n                                                type: 'email',\r\n                                                message: 'Please enter a valid email!'\r\n                                            }]}\r\n                                        >\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Date of Birth\"\r\n                                            name=\"dateOfBirth\"\r\n                                        >\r\n                                            <DatePicker className=\"w-100\"/>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Phone Number\"\r\n                                            name=\"phoneNumber\"\r\n                                        >\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Website\"\r\n                                            name=\"website\"\r\n                                        >\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24}>\r\n                                        <Form.Item\r\n                                            label=\"Address\"\r\n                                            name=\"address\"\r\n                                        >\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"City\"\r\n                                            name=\"city\"\r\n                                        >\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Post code\"\r\n                                            name=\"postcode\"\r\n                                        >\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Save Change\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({clients}) => {\r\n    const {client} = clients;\r\n    return {client}\r\n}\r\n\r\nexport default connect(mapStateToProps)(AboutClient)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","AboutClient","avatarEndpoint","state","dataSend","client","avatarUrl","name","email","userName","dateOfBirth","phoneNumber","website","address","city","postcode","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","this","props","to","APP_PREFIX_PATH","replace","username","phone","mobileFlex","className","size","src","icon","onChange","info","key","file","status","getBase64","originFileObj","imageUrl","setState","message","content","duration","showUploadList","action","type","onClick","layout","initialValues","street","onFinish","values","setTimeout","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","label","rules","required","htmlType","Component","connect","clients"],"sourceRoot":""}